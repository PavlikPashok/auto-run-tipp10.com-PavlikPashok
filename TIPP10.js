// –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –¢–ê–ô–ü–ï–† –° –ü–û–í–¢–û–†–û–ú
function autoCircleTyper() {
    const input = document.querySelector('input, textarea');
    if (!input) {
        console.log('‚ùå –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        setTimeout(autoCircleTyper, 1000); // –ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
        return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∏–∑ nobr
    const nobrAll = document.querySelectorAll('nobr');
    let originalText = '';
    nobrAll.forEach(e => originalText += e.textContent || '');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–π
    if (!originalText || originalText.length < 5) {
        console.log('‚è≥ –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥–µ–º...');
        setTimeout(autoCircleTyper, 1500);
        return;
    }
    
    console.log('üìù –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç:', originalText);
    
    // –ü–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –Ω–∞—á–∞–ª–æ
    const lastChar = originalText[originalText.length - 1];
    const restOfText = originalText.substring(0, originalText.length - 1);
    const modifiedText = lastChar + restOfText;
    
    console.log('üîÑ –ü–µ—á–∞—Ç–∞–µ–º:', modifiedText);
    
    let currentIndex = 0;
    
    function simulateKeyPress() {
        if (currentIndex >= modifiedText.length) {
            console.log('‚úÖ –¢–µ–∫—Å—Ç –Ω–∞–ø–µ—á–∞—Ç–∞–Ω! –ò—â–µ–º —Å–ª–µ–¥—É—é—â–∏–π...');
            
            // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –∏—â–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
            setTimeout(() => {
                console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç...');
                autoCircleTyper(); // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–Ω–æ–≤–∞
            }, 2000);
            
            return;
        }
        
        const char = modifiedText[currentIndex];
        
        // –ü–û–õ–ù–ê–Ø –ò–ú–ò–¢–ê–¶–ò–Ø –ù–ê–ñ–ê–¢–ò–Ø –ö–õ–ê–í–ò–®–ò
        const keyDownEvent = new KeyboardEvent('keydown', {
            key: char,
            code: getKeyCode(char),
            keyCode: char.charCodeAt(0),
            bubbles: true
        });
        
        const keyPressEvent = new KeyboardEvent('keypress', {
            key: char,
            code: getKeyCode(char),
            keyCode: char.charCodeAt(0),
            bubbles: true
        });
        
        input.value += char;
        
        const inputEvent = new Event('input', { bubbles: true });
        const changeEvent = new Event('change', { bubbles: true });
        
        const keyUpEvent = new KeyboardEvent('keyup', {
            key: char,
            code: getKeyCode(char),
            keyCode: char.charCodeAt(0),
            bubbles: true
        });
        
        // –î–ò–°–ü–ê–¢–ß–ò–ú –°–û–ë–´–¢–ò–Ø
        input.dispatchEvent(keyDownEvent);
        input.dispatchEvent(keyPressEvent);
        input.dispatchEvent(inputEvent);
        input.dispatchEvent(changeEvent);
        input.dispatchEvent(keyUpEvent);
        
        console.log(`üéπ ${currentIndex + 1}/${modifiedText.length}: "${char === ' ' ? '[–ü–†–û–ë–ï–õ]' : char}"`);
        
        currentIndex++;
        setTimeout(simulateKeyPress, 120);
    }
    
    function getKeyCode(char) {
        if (char === ' ') return 'Space';
        if (char === '\n') return 'Enter';
        if (/[a-zA-Z]/.test(char)) return 'Key' + char.toUpperCase();
        return 'Key' + char.toUpperCase();
    }
    
    input.focus();
    simulateKeyPress();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ-—Ç–∞–π–ø–µ—Ä
autoCircleTyper();

